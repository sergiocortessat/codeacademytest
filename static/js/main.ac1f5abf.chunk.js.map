{"version":3,"sources":["button.js","index.js"],"names":["Button","className","this","props","light","onClick","React","Component","Random","state","color","handleClick","bind","applyColor","prevProps","prevState","ary","join","reduce","a","b","formatColor","document","body","style","background","random","i","push","Math","floor","setState","chooseColor","isLight","ReactDOM","render","getElementById"],"mappings":"6NAEaA,EAAb,4JACC,WACC,OACC,wBACCC,UAAYC,KAAKC,MAAMC,MAAQ,eAAiB,cAC5CC,QAASH,KAAKC,MAAME,QAFzB,yBAHH,GAA4BC,IAAMC,WCG5BC,G,wDACJ,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,MAAM,CAAC,EAAE,EAAE,MAEb,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,qDAOnB,WACEV,KAAKW,e,gCAGP,SAAmBC,EAAWC,GAC5Bb,KAAKW,e,yBAGP,SAAYG,GACV,MAAO,OAASA,EAAIC,KAAK,MAAQ,M,qBAGnC,WAEE,OADYf,KAAKO,MAAMC,MACZQ,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,KAAK,M,wBAGpC,WACE,IAAMV,EAAQR,KAAKmB,YAAYnB,KAAKO,MAAMC,OAC1CY,SAASC,KAAKC,MAAMC,WAAaf,I,yBAGnC,WAEE,IADA,IAAMgB,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAKC,KAAKC,MAAoB,IAAdD,KAAKH,WAE9B,OAAOA,I,yBAGT,WACExB,KAAK6B,SACH,CAACrB,MAAOR,KAAK8B,kB,oBAGjB,WACE,OACE,gCACE,qBAAI/B,UAAWC,KAAK+B,UAAY,QAAU,QAA1C,2BACe/B,KAAKmB,YAAYnB,KAAKO,MAAMC,UAE3C,cAAC,EAAD,CAAQN,MAAOF,KAAK+B,UACpB5B,QAASH,KAAKS,qB,GAlDDL,IAAMC,YAwD3B2B,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,W","file":"static/js/main.ac1f5abf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Button extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button \r\n\t\t\t\tclassName={ this.props.light ? 'light-button' : 'dark-button' }\r\n        onClick={this.props.onClick}>\r\n\t\t\t\tRefresh\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from './button'\r\nimport './style.css'\r\n\r\nclass Random extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      color:[0,0,255]\r\n    }\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    this.applyColor();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.applyColor();\r\n  }\r\n\r\n  formatColor(ary) {\r\n    return 'rgb(' + ary.join(', ') + ')';\r\n  }\r\n\r\n  isLight() {\r\n    const rgb = this.state.color;\r\n    return rgb.reduce((a,b) => a+b) < 127 * 3;\r\n  }\r\n\r\n  applyColor() {\r\n    const color = this.formatColor(this.state.color);\r\n    document.body.style.background = color;\r\n  }\r\n\r\n  chooseColor() {\r\n    const random = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      random.push(Math.floor(Math.random()*256));\r\n    }\r\n    return random;\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(\r\n      {color: this.chooseColor()})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className={this.isLight() ? 'white' : 'black'}>\r\n        Your Color is {this.formatColor(this.state.color)}\r\n        </h1>\r\n        <Button light={this.isLight()}\r\n        onClick={this.handleClick}  />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Random />, \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}